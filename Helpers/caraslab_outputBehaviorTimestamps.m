function caraslab_outputBehaviorTimestamps(Behaviordir, Ephysdir)
    % This function extracts behavioral timestamps of relevance for ephys
    % analyses. It searches within the processed ephys folder (Ephysdir) for information
    % about the behavioral session contained in the .info file generated by the
    % TDT system.
    % Outputs:
    %   *_spoutTimestamps.csv: All spout events containing onset and onset
    %       times
    %   *_trialInfo.csv: All trial events generated by the TDT system but with
    %       a bit more processing to bit-unmask the response variables.
    % Written by M Macedo-Lima November, 2020

    fprintf('\nProcessing behavioral timestamps (spout and trial info)...\n')

    %List the files in the folder (each file = one session)
    [files,fileIndex] = listFiles(Behaviordir,'*.mat');
    files = files(fileIndex);
    ephysfolders = caraslab_lsdir(Ephysdir);
    ephysfolders = {ephysfolders.name};

    % Empty folder. Not psychometric testing
    if isempty(files)
        return
    end


     %Load in behavior file
    % Catch error if -mat file is not found
    try
        fprintf('Loading behavioral -mat file: %s.......\n', files.name)
        load(fullfile(files.folder, files.name));
    catch ME
        if strcmp(ME.identifier, 'MATLAB:load:couldNotReadFile')
            fprintf('\n-mat file not found\n')
            return
        else
            fprintf(ME.identifier)
            fprintf(ME.message)
            return
        end
    end



    % File matching to ephys info
    for ephys_i = 1:numel(ephysfolders)
        cur_path.name = ephysfolders{ephys_i};
        cur_savedir = fullfile(Ephysdir, cur_path.name);

        % In case this folder is still absent
        mkdir(fullfile(cur_savedir, 'CSV files'));

        %Load in info file
        % Catch error if -mat file is not found
        try
            load(fullfile(cur_savedir, [cur_path.name '.info']), '-mat');
        catch ME
            if strcmp(ME.identifier, 'MATLAB:load:couldNotReadFile')
                fprintf('\n-mat file not found\n')
                continue
            else
                fprintf(ME.identifier)
                fprintf(ME.message)
                continue
            end
        end

        % Match current folder with behavioral session by blockname
        folder_block = epData.info.blockname;
        cur_session = [];
        found_session_flag = 0;
        for session_idx=1:numel(Session)

            session_block = Session(session_idx).Info.ephys.block;

            if strcmp(folder_block, session_block)
                cur_session = Session(session_idx);
                found_session_flag = 1;
                break
            end
        end
        if ~found_session_flag
            continue
        end
        % Skip empty Session
        if numel(cur_session.Data) == 1
            continue
        end
        subj_id = cur_session.Info.Name;
        session_id = epData.info.blockname;

        %% Output spout onset-offset timestamps
        spout_onsets = epData.epocs.Spou.onset;
        spout_offsets = epData.epocs.Spou.offset;

        fileID = fopen(fullfile(cur_savedir, 'CSV files', ...
            [subj_id '_' session_id '_spoutTimestamps.csv']), 'w');

        header = {'Subj_id', 'Session_id', 'Spout_onset', 'Spout_offset'};
        fprintf(fileID,'%s,%s,%s,%s\n', header{:});
        nrows = length(spout_onsets);
        for idx = 1:nrows
            output_cell = {subj_id, session_id, spout_onsets(idx), spout_offsets(idx)};

            fprintf(fileID,'%s,%s,%d,%d\n', output_cell{:});
        end
        fclose(fileID);
        %% Output trial parameters
        % Combine the ephys-timelocked timestamps with the 
        % session info from ePsych; also translate the response code bitmask
        session_data = struct2table(cur_session.Data);

        % Sometimes the recording ends before a trial is completed and the offset 
        % value will be Inf. I'll add this checkpoint here to account for that
        try
            temp_offset = epData.epocs.TTyp.offset;
            offset_inf = isinf(temp_offset);
            session_data.Trial_onset = epData.epocs.TTyp.onset(~offset_inf);
            session_data.Trial_offset = epData.epocs.TTyp.offset(~offset_inf);
        catch ME
            % Sometimes the above doesn't work. Not sure why but epData ends up
            % with 1 more element than cur_session. Let's cut the last one for
            % now
            if strcmp(ME.identifier, 'MATLAB:table:RowDimensionMismatch')
                session_data.Trial_onset = epData.epocs.TTyp.onset(1:size(session_data,1));
                session_data.Trial_offset = epData.epocs.TTyp.offset(1:size(session_data,1));
            end
        end

        session_data.Subj_id = repmat([subj_id], size(session_data, 1), 1);
        session_data.Session_id = repmat([session_id], size(session_data, 1), 1);
        % Unmask the bitmask    
        response_code_bits = cur_session.Info.Bits;
        session_data.Hit = bitget(session_data.ResponseCode, response_code_bits.hit);
        session_data.Miss = bitget(session_data.ResponseCode, response_code_bits.miss);
        session_data.CR = bitget(session_data.ResponseCode, response_code_bits.cr);
        session_data.FA = bitget(session_data.ResponseCode, response_code_bits.fa);

        writetable(session_data, fullfile(cur_savedir, 'CSV files', ...
            [subj_id '_' session_id '_trialInfo.csv']));

            %% TODO: output opto timestamps here when needed
    end

end